@layout UserLayout
@page "/profile"
@attribute [Authorize]

<UserBanner H1="Mój profil"></UserBanner>

<div class="container py-4">
    <div class="accordion" id="accordionExample">
        <div class="accordion-item">
            <h2 class="accordion-header" id="headingOne">
                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                    Informacje podstawowe
                </button>
            </h2>
            <div id="collapseOne" class="accordion-collapse collapse show p-3" aria-labelledby="headingOne" data-bs-parent="#accordionExample">
                <EditForm Model="@Model" OnValidSubmit="@SaveUser" class="row">
                    <div class="form-group pb-3 p-1 col-lg-6">
                        <label class="ms-3">Email</label>
                        <InputText typeof="email" class="form-control form-rounded" readonly @bind-Value="@Model.Email" placeholder="Email"></InputText>
                    </div>
                    <div class="form-group pb-3 p-1 col-lg-6">
                        <label class="ms-3">Telefon</label>
                        <InputText class="form-control form-rounded text-uppercase" @bind-Value="@Model.UserInfo.PhoneNumber" placeholder="Telefon"></InputText>
                    </div>
                    <div class="form-group pb-3 p-1 col-lg-6">
                        <label class="ms-3">Imię</label>
                        <InputText class="form-control form-rounded text-uppercase" @bind-Value="@Model.UserInfo.FirstName" placeholder="Imię"></InputText>
                    </div>
                    <div class="form-group pb-3 p-1 col-lg-6">
                        <label class="ms-3">Nazwisko</label>
                        <InputText class="form-control form-rounded text-uppercase" @bind-Value="@Model.UserInfo.LastName" placeholder="Nazwisko"></InputText>
                    </div>
                    <div class="form-group pb-3 p-1 col-lg-6">
                        <label class="ms-3">PESEL</label>
                        <InputText class="form-control form-rounded text-uppercase" @bind-Value="@Model.UserInfo.Pesel" placeholder="PESEL"></InputText>
                    </div>
                    <div class="form-group pb-3 p-1 col-lg-6">
                        <label class="ms-3">Data urodzenia</label>
                        <InputDate class="form-control form-rounded" @bind-Value="@Model.UserInfo.DateOfBirth" placeholder="Data urodzenia"></InputDate>
                    </div>
                    <h5 class="col @MessageUserClass">@MessageUser</h5>
                    <button type="submit" class="btn bg-c3 form-rounded col-3 col-lg-2 col-xl-1 ms-auto">Zapisz</button>
                </EditForm>
            </div>
        </div>
        <div class="accordion-item">
            <h2 class="accordion-header" id="headingTwo">
                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                    Zmiana hasła
                </button>
            </h2>
            <div id="collapseTwo" class="accordion-collapse collapse p-3" aria-labelledby="headingTwo" data-bs-parent="#accordionExample">
                <EditForm Model="@RequestModel" OnValidSubmit="@SavePassword" class="row">
                    <div class="form-group pb-3 p-1 col-12">
                        <label class="ms-3">Obecne hasło</label>
                        <InputText type="password" class="form-control form-rounded" @bind-Value="@RequestModel.OldPassword" placeholder="Obecne hasło"></InputText>
                    </div>
                    <div class="form-group pb-3 p-1 col-lg-6">
                        <label class="ms-3">Nowe hasło</label>
                        <InputText type="password" class="form-control form-rounded" @bind-Value="@RequestModel.NewPassword" placeholder="Nowe hasło"></InputText>
                    </div>
                    <div class="form-group pb-3 p-1 col-lg-6">
                        <label class="ms-3">Powtórz hasło</label>
                        <InputText type="password" class="form-control form-rounded" @bind-Value="@RequestModel.ConfirmPassword" placeholder="Powtórz hasło"></InputText>
                    </div>
                    <h5 class="col @MessagePasswordClass">@MessagePassword</h5>
                    <button type="submit" class="btn bg-c3 form-rounded col-3 col-lg-2 col-xl-1 ms-auto">Zmień</button>
                </EditForm>
            </div>
        </div>
    </div>
</div>


@code {
    [Inject]
    public IUserService userService { get; set; }

    [Inject]
    public IAuthService authService { get; set; }

    public GetProfileQueryVM Model { get; set; } = new GetProfileQueryVM();

    public PasswordChangeCommand RequestModel { get; set; } = new PasswordChangeCommand();

    public string MessageUser { get; set; } = string.Empty;
    public string MessagePassword { get; set; } = string.Empty;

    public string MessageUserClass { get; set; } = string.Empty;
    public string MessagePasswordClass { get; set; } = string.Empty;

    protected async override Task OnInitializedAsync()
    {
        await GetData();
    }

    protected async Task GetData()
    {
        var response = await userService.GetProfile();

        if (response.Success)
        {
            Model = response.Data;
        }
    }

    protected async Task SaveUser()
    {
        var response = await userService.EditProfile(new EditProfileCommand()
            {
                Id = Model.Id,
                UserInfo = new UserInfoInEditProfileCommand()
                {
                    DateOfBirth = Model.UserInfo.DateOfBirth,
                    FirstName = Model.UserInfo.FirstName.ToLower(),
                    LastName = Model.UserInfo.LastName.ToLower(),
                    Pesel = Model.UserInfo.Pesel.ToUpper(),
                    PhoneNumber = Model.UserInfo.PhoneNumber.ToUpper()
                }
            });

        MessageUserClass = response.Success ? "text-success" : "text-danger";

        MessageUser = response.Message;

        if (response.ValidationErrors != null)
        {
            MessageUser = response.ValidationErrors.First();
        }

        if (response.Success)
            await GetData();
    }

    protected async Task SavePassword()
    {
        var response = await authService.PasswordChange(RequestModel);

        MessagePasswordClass = response.Success ? "text-success" : "text-danger";

        MessagePassword = response.Message;

        if (response.ValidationErrors != null)
        {
            MessagePassword = response.ValidationErrors.First();
        }
    }
}
