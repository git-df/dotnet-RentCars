@layout EmptyLayout
@page "/signin"
@page "/signin/{Success}"
@inject NavigationManager NavManager

<PageTitle>Logowanie</PageTitle>

<div>
    <div class="row text-center">
        <div class="col-xl-8 bg-white tx-2 vh-100">
            <div class="hcenter">
                <div class="minw mx-auto">
                    @if (!string.IsNullOrEmpty(Success))
                    {
                        <h3 class="text-success pb-1">@Success</h3>
                    }
                    <h1 class="mx-3"><b>Zaloguj się na swoje konto</b></h1>
                    <EditForm Model="@Model" OnValidSubmit="@HandleSubmit">
                        <div class="form-group pb-3 pt-5">
                            <InputText type="email" class="form-control form-rounded bg-c4" @bind-Value="@Model.Email" placeholder="Email"></InputText>
                        </div>
                        <div class="form-group pb-4">
                            <InputText type="password" class="form-control form-rounded bg-c4" @bind-Value="@Model.Password" placeholder="Hasło"></InputText>
                        </div>
                        <div class="form-group pb-1">
                            <span class="text-warning">@Message</span>
                        </div>
                        <button type="button" @onclick=@Navigate class="btn bg-white btn-lg form-rounded d-xl-none">Zarejestruj się</button>
                        <button type="submit" class="btn bg-c3 btn-lg form-rounded">Zaloguj się</button>
                    </EditForm>
                </div>
            </div>
        </div>
        <div class="d-none d-xl-block col-4 bg-c3 tx-1 vh-100">
            <div class="hcenter">
                <div class="minw mx-auto">
                    <h1 class="mx-3 pb-3"><b>Widzimy się pierwszy raz?</b></h1>
                    <p class="pb-4 px-3">Jeżeli nie posiadasz konta, utwórz je aby móc w pełni korzystać z serwisu!</p>
                </div>
                <button type="button" @onclick=@Navigate class="btn bg-white btn-lg form-rounded">Zarejestruj się</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Inject]
    public IAuthService authService { get; set; }

    public SignInCommand Model { get; set; } = new SignInCommand();

    public string Message { get; set; } = string.Empty;

    [Parameter]
    public string Success { get; set; } = string.Empty;

    void Navigate()
    {
        NavManager.NavigateTo("/signup");
    }

    protected async override Task OnInitializedAsync()
    {
        await authService.SignOut();
    }

    protected async Task HandleSubmit()
    {
        StringBaseResponse response = await authService.SignIn(Model);

        if (response.Success)
        {
            NavManager.NavigateTo("/profile");
        }

        if (!string.IsNullOrEmpty(response.Message))
        {
            Message = response.Message;
        }
        else if (!string.IsNullOrEmpty(response.ValidationErrors.FirstOrDefault()))
        {
            Message = response.ValidationErrors.FirstOrDefault() ?? "";
        }
    }
}